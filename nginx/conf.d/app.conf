server {
	#root /var/www/html/portfolio/public;

	server_name tabhuman.com www.tabhuman.com;
    client_max_body_size 100M;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/public;
	if ($host = tabhuman.com) {
		return 301 https://www.tabhuman.com$request_uri;
	}

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
	location / {
                proxy_pass http://127.0.0.1:6060;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header x-forwarded-for $remote_addr;
                proxy_cache_bypass $http_upgrade;
        }

	location ~* \.(?:ico|gif|jpe?g|png|woff2?|eot|otf|ttf|svg|js|css)$ {
		proxy_pass http://127.0.0.1:6060;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header x-forwarded-for $remote_addr;
                proxy_cache_bypass $http_upgrade;

		expires 365d;
		more_set_headers Pragma public;
		more_set_headers Cache-Control "public";
	}

    listen [::]:443 ssl http2 ipv6only=on; # managed by Certbot
    listen 443 ssl http2; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    #ssl_certificate /etc/letsencrypt/live/jamesisme.com-0001/fullchain.pem; # managed by Certbot
    #ssl_certificate_key /etc/letsencrypt/live/jamesisme.com-0001/privkey.pem; # managed by Certbot

    ssl_certificate /var/www/ssl_certs/tabhuman.crt;
    ssl_certificate_key /var/www/ssl_certs/tabhuman.rsa;

    # OCSP Stapling
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /var/www/ssl_certs/trusted.crt;

    resolver 8.8.8.8 8.8.4.4;
}

server {
    if ($host = www.tabhuman.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = tabhuman.com) {
        return 301 https://www.$host$request_uri;
    } # managed by Certbot
	
        listen 80;
        listen [::]:80;

    server_name tabhuman.com www.tabhuman.com;
    return 404; # managed by Certbot
}

